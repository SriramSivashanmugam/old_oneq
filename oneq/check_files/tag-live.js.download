(function(networkId) {
var cacheLifetimeDays = 30;

var customDataWaitForConfig = [
  { on: function() { return Invoca.Client.parseCustomDataField("aam_uuid", "Last", "Cookie", "aam_uuid"); }, paramName: "aam_uuid", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("AT_T_UUID", "Last", "JavascriptDataLayer", "Invoca.Client.ddoGetVar(\"user.uuid\")"); }, paramName: "AT_T_UUID", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("DIRECTVLanguage", "Last", "URLParam", ""); }, paramName: "DIRECTVLanguage", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("DIRECTVProductInterest", "Last", "JavascriptDataLayer", "sessionStorage.getItem(\"DIRECTVProductInterest\")"); }, paramName: "DIRECTVProductInterest", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("extendedSource", "Last", "JavascriptDataLayer", "Invoca.Client.ddoGetVar(\"wtExtndSource\")"); }, paramName: "extendedSource", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("fiber_indicator", "Last", "URLParam", ""); }, paramName: "fiber_indicator", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("flowCode", "Last", "JavascriptDataLayer", "Invoca.Client.ddoGetVar(\"page.pageInfo.flowCode\")"); }, paramName: "flowCode", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("friendlyPageName", "Last", "JavascriptDataLayer", "Invoca.Client.ddoGetVar(\"page.pageInfo.friendlyPageName\")"); }, paramName: "friendlyPageName", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("fullPageURL", "Last", "JavascriptDataLayer", "window.location.hostname + window.location.pathname + window.location.search + window.location.hash"); }, paramName: "fullPageURL", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("gclid", "Last", "URLParam", ""); }, paramName: "gclid", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("gclsrc", "Last", "URLParam", ""); }, paramName: "gclsrc", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("gcm_uid", "Last", "URLParam", ""); }, paramName: "gcm_uid", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("gigaAvailResult", "Last", "JavascriptDataLayer", "Invoca.Client.getMktAvailability(\"mktGiga\")"); }, paramName: "gigaAvailResult", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("language", "Last", "JavascriptDataLayer", "Invoca.Client.ddoGetVar(\"page.pageInfo.language\")"); }, paramName: "language", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("LOB", "Last", "URLParam", ""); }, paramName: "LOB", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("Misc", "Last", "URLParam", ""); }, paramName: "Misc", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("owner", "Last", "URLParam", ""); }, paramName: "owner", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("p", "Last", "JavascriptDataLayer", "window.location.pathname"); }, paramName: "p", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("pageDomain", "Last", "JavascriptDataLayer", "window.location.hostname"); }, paramName: "pageDomain", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("pageName", "Last", "JavascriptDataLayer", "Invoca.Client.ddoGetVar(\"user.uuid\")"); }, paramName: "pageName", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("pageTitle", "Last", "JavascriptDataLayer", "document.title"); }, paramName: "pageTitle", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("productSegment", "Last", "JavascriptDataLayer", "Invoca.Client.ddoGetVar(\"user.account.productSegment\")"); }, paramName: "productSegment", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("productType", "Last", "JavascriptDataLayer", "Invoca.Client.ddoGetVar(\"page.attributes.productType\")"); }, paramName: "productType", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("purchase", "Last", "URLParam", ""); }, paramName: "purchase", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("referrer", "Last", "URLParam", ""); }, paramName: "referrer", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("source_campaign", "Last", "URLParam", ""); }, paramName: "source_campaign", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("speed", "Last", "URLParam", ""); }, paramName: "speed", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("StreamDVR", "Last", "JavascriptDataLayer", "sessionStorage.getItem(\"StreamDVR\")"); }, paramName: "StreamDVR", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("StreamEquipment", "Last", "JavascriptDataLayer", "sessionStorage.getItem(\"StreamEquipment\")"); }, paramName: "StreamEquipment", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("StreamItems", "Last", "JavascriptDataLayer", "sessionStorage.getItem(\"StreamItems\")"); }, paramName: "StreamItems", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("StreamPackage", "Last", "JavascriptDataLayer", "sessionStorage.getItem(\"StreamPackage\")"); }, paramName: "StreamPackage", fallbackValue: null },
  { on: function() { return Invoca.Client.parseCustomDataField("t", "Last", "URLParam", ""); }, paramName: "t", fallbackValue: null }
];

var defaultCampaignId = "ATT";

var destinationSettings = {
  paramName: "invoca_detected_destination",
  matchLocalNumbers: false,
  matchTollFreeNumbers: false
};

var numbersToReplace = null;

var organicSources = false;

var reRunAfter = 2000;

var requiredParams = null;

var resetCacheOn = ['gclid', 'utm_source', 'utm_medium'];

var waitFor = 0;

var customCodeIsSet = (function() {
  Invoca.Client.customCode = function(options) {
    options.integrations = {
	adobeAnalytics: {
		username: "55633F7A534535110A490D44@AdobeOrg",
		paramName: "mcid"
	}
};

var autoCreateRingpoolArray = ["+18776771904", "+18662996824", "+18773337175"];

Invoca.Tools.allowedClientSideParams([
	"invoca_id",
	"s",
	"t",
	"gclid",
	"gcm_uid",
	"referrer"
]);

Invoca.Client.ddoGetVar = function (ddoVar) {
	return ddo && ddo.getVar(ddoVar) ? ddo.getVar(ddoVar) : "";
};

var source = Invoca.Tools.readUrl("source");
if (source && source.charAt(0) === "E") {
	options.poolParams.s = source;
}

Invoca.Client.getMktAvailability = function (metric) {
	var metricValue;
	if (sessionStorage.mktAvailability) {
		var mktAvailabilityObj = JSON.parse(sessionStorage.mktAvailability)[0];
		metricValue = mktAvailabilityObj[metric];
		if (metric !== undefined && mktAvailabilityObj[metric] !== undefined) {
			metricValue = mktAvailabilityObj[metric];
		}
	}
	return metricValue;
}

options.onPhoneNumberFound = function (node, requestData) {
	var shouldSwap = true;

	//Do not swap on support pages
	if (shouldSwap === true && window.location.href.indexOf("/support/") > -1) {
		shouldSwap = false;
	}

	shouldSwap = isTollFree(requestData.request_id);

	//List of exception pages. Invoca will not work here.
	if (shouldSwap === true && (window.location.href.indexOf("/collateral/access.html") > -1 ||
			window.location.href.indexOf("/clk/") > -1 ||
			window.location.href.indexOf("/olam/talkUsageDetailPage") > -1 ||
			window.location.href.indexOf("/checkmyorder/") > -1 ||
			window.location.href.indexOf("checkPortStatus") > -1 ||
			window.location.href.indexOf("/olam/textWebUsageDetailPage") > -1 ||
			window.location.href.indexOf("/olam/passthroughAction.myworld") > -1 ||
			window.location.href.indexOf("/checkout/thankyou.html") > -1 ||
			window.location.href.indexOf("/acctmgmt/tobr/giveUsCall") > -1 ||
			window.location.href.indexOf("/DTVAPP/register/register.jsp") > -1 ||
			window.location.href.indexOf("/my/#/viewBill") > -1 ||
			window.location.href.indexOf("#FindAccount") > -1 ||
			window.location.href.indexOf("/DTVAPP/mydirectv/account/myEquipment.jsp") > -1 ||
			window.location.href.indexOf("/olam/textUsageDetailPage") > -1 ||
			window.location.href.indexOf("/acctmgmt/tobr/") > -1 ||
			window.location.href.indexOf("directv_att_welcome") > -1 ||
			window.location.href.indexOf("/collateral/access.html") > -1 ||
			window.location.href.indexOf("/collateral/dial-guide.html") > -1 ||
			window.location.href.indexOf("/microsites/v1/prusvi/") > -1 ||
			window.location.href.indexOf("/prusvi/") > -1 ||
			window.location.href.indexOf("/rvn/support") > -1 ||
			window.location.href.indexOf("utm_service=dtv_support") > -1 ||
			window.location.href.indexOf("/dep") > -1 ||
			window.location.href.indexOf("/DTVAPP/content/business/") > -1 ||
			window.location.href.indexOf("directv-for-business") > -1 ||
			window.location.href.indexOf("support.directv.com") > -1 ||
			window.location.href.indexOf("/help/ebb/") > -1 ||
			window.location.href.indexOf("att.com/tv/") > -1 ||
			window.location.href.indexOf("att.com/home-phone/landline/") > -1 ||
      window.location.href.toLowerCase().indexOf("/buy/bundles/?product_suite=ndtvn") > -1 ||
      window.location.href.indexOf("att.com/home-phone/landline/") > -1 ||
			(window.location.href.indexOf("/support/") > -1 && window.location.href.indexOf("business") === -1))) {
		shouldSwap = false;
	}

	if (shouldSwap && isAutoCreateRingpoolNumber(requestData.params.invoca_detected_destination)) {
		requestData.destination_name = requestData.params.invoca_detected_destination;
	}
	
	// Temporary condition for AB Test

	if (Invoca.Client.isABTestNumber(requestData.request_id) && (sourceParameter.charAt(16) === "E" 
		|| sourceParameter.charAt(16) === "U" 
		|| sourceParameter.charAt(16) === "D" 
		|| sourceParameter.charAt(16) === "A"
		|| sourceParameter.charAt(16) === "H"
		|| sourceParameter.charAt(16) === "L"
		|| sourceParameter.indexOf("CfD") > -1
		|| sourceParameter.indexOf("DC100P") > -1
		|| sourceParameter === "EGOOTMKINFBNDDSKP"
		|| sourceParameter === "EGOOTMKINFBNDMOBP"
		|| !sourceParameter)) {
		requestData.advertiser_campaign_id_from_network = "ab_test";
	}
	
	// End Temporary
	
	if (shouldSwap && (Invoca.Tools.readUrl("referrer") || Invoca.Tools.readInvocaData("referrer"))) {
		requestData.params.invoca_detected_destination = "";
	}
  
	if (shouldSwap) {
		return requestData;
	} else {
		return false;
	}
};

// Temporary condition for AB Test

var abTestNumberArray = ["+18669516106", "+18553330107"];

Invoca.Client.isABTestNumber = function (number) {
	return abTestNumberArray.indexOf(number) > -1;
}

// End Temporary

function isAutoCreateRingpoolNumber(number) {
	return autoCreateRingpoolArray.indexOf(number) > -1;
}

var tfnRegexArray = [/^(?!\+1800)/, /^(?!\+1888)/, /^(?!\+1877)/, /^(?!\+1866)/, /^(?!\+1855)/, /^(?!\+1844)/, /^(?!\+1833)/];

function isTollFree(requestId) {
	function prefixPresent(tfnRegex) {
		var regex = new RegExp(tfnRegex, "g");
		//console.log("Invoca test", requestId, tfnRegex, regex.test(requestId));
		return regex.test(requestId);
	}

	var isTollFreeResult = !tfnRegexArray.every(prefixPresent);
	//console.log("Invoca is toll free result", isTollFreeResult);

	return isTollFreeResult;
}

var tfnParameter = Invoca.Tools.readUrl('tfn') || Invoca.Tools.readInvocaData("t");
var sourceParameter = Invoca.Tools.readUrl('source') || Invoca.Tools.readInvocaData("s") ? Invoca.Tools.readUrl('source') || Invoca.Tools.readInvocaData("s") : "";

var tfnCodes = {
	"directv": "DirecTV",
	"directtv": "DirecTV",
	"homesolutions": "ATT",
	"atttv": "ATT",
	"wireless": "Mobility",
	"att": "ATT",
	"mobility": "Mobility",
	"aff": "Affiliate",
	"B2B": "B2B"
};

//Pages included in the dynamic TFN function
var buyFlowURLArray = ["business.att.com", "att.com", "atttv.com", "directv.com", "connectedcommunitiessolutions.com"];

Invoca.Client.getCurrCampaignId = function (requestData) {
	return Invoca.Client.centerfieldCheck() || Invoca.Client.buyFlowCheck() || tfnCodes[tfnParameter];
};

Invoca.Client.buyFlowCheck = function () {
	var campaignId;
	if (buyFlowURLArray.some(function (url) {
			return window.location.href.indexOf(url) > -1;
		}) && sourceParameter) {
		campaignId = "buy_flow";
	}
	return campaignId;
};

Invoca.Client.centerfieldCheck = function () {
	var campaignId;
	if (window.location.href.indexOf("/cf/") > -1 || window.location.href.indexOf("/cfd/") > -1) {
		campaignId = "centerfield";
	}
	return campaignId;
};

options.defaultCampaignId = Invoca.Client.getCurrCampaignId();

options.destinationSettings = {
	paramName: "invoca_detected_destination"
};

options.integrations.googleAnalytics = true;

function useGCM() {
	if (Invoca.Tools.readUrl("gclid") || Invoca.Tools.readInvocaData("gclid")) {
		return null;
	} else {
		return Invoca.Tools.readUrl("gcm_uid") ||
			Invoca.Tools.readCookie("gcm_uid") ||
			Invoca.Tools.readInvocaData("gcm_uid");
	}
}

options.poolParams.gcm_uid = useGCM();

if (window.location.href.indexOf("directv.com") > -1) {
  options.integrations.googleAnalytics = true;
}
return options;
  };

  return true;
})();

var generatedOptions = {
  autoSwap:            true,
  cookieDays:          cacheLifetimeDays,
  country:             "US",
  defaultCampaignId:   defaultCampaignId,
  destinationSettings: destinationSettings,
  disableUrlParams:    ['3rd_Party_BB_Sold','ATTTV','ATTTV_NOW','buy_flow_dest_num','campaign','CMP','customer_type','directv','g_cid','invoca_destination_number','ipbb','IPDSL','iptv','liability_type','mcid','newlines','pkg_count','postpaid_data','postpaid_tablet','postpaid_voice','profile_name','query_string','s','Site_location','Total_Products_Sold','upgrade','utm_campaign','utm_medium','utm_source','voip'],
  doNotSwap:           ["800-288-2020", "800-331-0500", "866-294-3464", "800-651-5111", "866-772-3140", "800-531-5000", "888-388-4249", "800-390-2782", "800-651-1111", "800-772-3140", "800-691-4388", "800-901-9878", "866-241-6567", "866-241-6568", "866-435-3264", "877-782-8870", "888-562-8662", "888-490-6096", "888-471-4576", "888-258-7115", "888-267-1317", "877-844-5584", "866-975-0050", "855-288-2727", "866-385-3193", "877-996-7017", "866-642-4170"],
  maxWaitFor:          waitFor,
  networkId:           networkId || null,
  numberToReplace:     numbersToReplace,
  organicSources:      organicSources,
  poolParams:          {},
  reRunAfter:          reRunAfter,
  requiredParams:      requiredParams,
  resetCacheOn:        resetCacheOn,
  waitForData:         customDataWaitForConfig
};

Invoca.Client.startFromWizard(generatedOptions);

})(1593);
